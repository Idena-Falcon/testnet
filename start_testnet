#!/bin/sh
set -e

API_KEY="123"
VALIDATION_IN_MINUTES=10

node_count="$1"

first_time="$(( (($(date +'%s') + (31536000 * $VALIDATION_IN_MINUTES - 1)) / 60) * 60))"
pretty_date=$(date '+%Y-%m-%d %H:%M:%S' -d @$first_time)

 start_node() {
    cd $1
    ../idena-go --config=conf.json --nodiscovery --verbosity 6
    return 0
}

create_invites() {
    sleep 10
    for (( node=1; node<=$node_count; node++ ))
    do
        resp=$(curl 'http://localhost:8100/' -H 'User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0' -H 'Accept: */*' -H 'Accept-Language: en' --compressed -H 'Referer: http://rpc.idena.io/' -H 'Content-Type: application/json' -H 'Origin: http://rpc.idena.io' -H 'Connection: keep-alive' -H 'Sec-Fetch-Dest: empty' -H 'Sec-Fetch-Mode: cors' -H 'Sec-Fetch-Site: cross-site' --data-raw "{\"method\":\"dna_sendInvite\",\"params\":[{}],\"id\":69,\"key\":\"$API_KEY\"}")
        invite=$(echo $resp | jq -r .result.key)
        echo "Created invite for node$node: $invite"
        echo $invite >> invites
        sleep 0.2
    done
}

echo Scheduling first validation at $pretty_date
echo node count $node_count
echo first_time $first_time

god_address=$(sed "1q;d" keys)
god_key=$(sed "2q;d" keys)

echo Setting god address as $god_address

cat conf_god.json | jq ".GenesisConf.FirstCeremonyTime = $first_time | .GenesisConf.GodAddress = \"$god_address\"" > new_conf_god.json
mv new_conf_god.json conf_god.json

cat conf_node.json | jq ".GenesisConf.FirstCeremonyTime = $first_time | .GenesisConf.GodAddress = \"$god_address\"" > new_conf_node.json
mv new_conf_node.json conf_node.json

goddir="god"
rm -rf "$goddir"
rm -rf "$goddir"

cat settings.json | jq ".url = \"http://localhost:8100\" | .externalApiKey = \"$API_KEY\"" > "$goddir/client_config/Idena/settings.json"
echo $god_key > "$goddir/datadir/keystore/nodekey"
echo -n $API_KEY > "$goddir/datadir/api.key"

echo 'Starting god'
(start_node $goddir) &
echo 'Waiting for IPFS config...'
sleep 3
god_peer_id=$(cat $goddir/datadir/ipfs/config | jq -r ".Identity.PeerID")
chmod 777 -R "$goddir"
echo 'God setup finished'
(create_invites) &

cat conf_node.json | jq ".IpfsConf.BootNodes[0] = \"/ip4/127.0.0.1/tcp/60800/ipfs/$god_peer_id\"" > new_conf_node.json
mv new_conf_node.json conf_node.json

for (( node=1; node<=$node_count; node++ ))
do
    addr_line=$(($node * 3 - 2 + 3))
    key_line=$(($node * 3 - 1 + 3))

    address=$(sed "${addr_line}q;d" keys)
    key=$(sed "${key_line}q;d" keys)
    if [ -z "$key" ]
    then
        echo "No more keys for nodes! Stopping at $node"
        break
    fi
    echo Intializing node $node
    nodedir="node$node"
 
    chmod 777 -R "$nodedir"
    (start_node $nodedir) &
done
echo Done
wait
